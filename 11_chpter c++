# 클래스의 선언
malloc -> new : 생성자(== __intit__)
free -> delete : 소멸자
c++ = 큰int라고 생각
# private = class, public = struct


#include <iostream>

using namespace std;

class Cat{
    public:
    int itsAge;
    int itsWeight;
};

int main() {
    Cat Fristhy;
    Fristhy.itsAge = 5;
    cout<<"Fristhy is a cat who is";
    cout<<Fristhy.itsAge<<"years old.\n";
}
-----------------------------------------------------------------------------------
# 스코프 연산자 (::) = 들어갈 함수::받을변수

#include <iostream>

using namespace std;

class Cat{
    public:
    int GetAge();
    void SetAge(int age);
    void Meow();
    private:
    int itsAge;
};
int Cat::GetAge(){
    return itsAge;
}
void Cat::SetAge(int age){
    itsAge = age;
}
void Cat::Meow(){
    cout << "Meow.\n";
}
int main() {
    Cat Frisky;
    Frisky.SetAge(5);
    Frisky.Meow();
    cout<<"Frisky is a cat who is ";
    cout<<Frisky.GetAge()<<"years old.\n";
    Frisky.Meow();
    return 0;
    
}
----------------------------------------------------------------------------------
# 생성자와 소멸자
- 생성자 : 클래스와 같은 이름을 사용
- 소멸자 : ("~"를 사용)

#include <iostream>

using namespace std;

class Cat{
public:
    Cat(int initialAge);
    ~Cat();
    int GetAge();
    void SetAge(int age);
    void Meow();
private:
    int itsAge;
};
Cat::Cat(int initialAge){
    itsAge = initialAge;
    cout << "생성자 \n";
}
Cat::~Cat(){
    cout<<"소멸자 \n";
}
int Cat::GetAge(){
    return itsAge;
}
void Cat::SetAge(int age){
    itsAge = age;
}
void Cat::Meow(){
    cout << "Meow.\n";
}
int main() {
    Cat Frisky(5);
    Frisky.Meow();
    cout<<"Frisky is a cat who is ";
    cout<<Frisky.GetAge()<<"years old.\n";
    Frisky.Meow();
    Frisky.SetAge(7);
    cout << "Now Frisky is";
    cout<<Frisky.GetAge()<<"years old.\n";
    Frisky.Meow();
    return 0;
    
}
-----------------------------------------------------------------------------------
#include <iostream>

using namespace std;

class Cat{
    int itsAge;
    const char* name;
public:
    Cat(int initialAge, const char* name) {cout << "Cat 데이터 생성 "<<name << endl;
    itsAge = initialAge; this -> name = name;}
    ~Cat(){ cout<<"Cat 데이터 해제 "<<this->name<<endl;}
    int GetAge(){return itsAge;}
    void SetAge(int age){itsAge = age;}
    void Meow(){cout << "Meow.\n";}
};
Cat Tom(3,"Tom"); //함수바깥, 전역공간, 데이터공간
int main() {
    Cat Frisky(5,"Frisky");// 함수 안쪽, 지역공간, 스택공간
    Cat * theCat = new Cat(7,"Tom Friend"); // 힙공간
    delete theCat; // 막으면 TomFriend가 마지막에 처리된다.
    
}
-------------------------------------------------------------------------------------










































