// Book 구조체 (도서명, 작가)를 선언하여 구조체 배열로 도서목록을 관리
//  * 2차 배열을 사용
// 정수형 전역변수를 사용하여 입력된 도서 수를 관리
// 프로그램 시작시 txt파일의 데이터를 읽어와서 구조체 배열에 셋팅
// 정수형 메뉴를 입력받아 각 기능을 수행
// 프로그램 종료시 책의 모든 정보를 파일에 write하고 프로그램 시작시
// 파일에서 도서 목록을 읽어와 배열에 저장
// 파일명 : book_list.txt은 다음과 같은 형태로 저장


// 12chpter(구조체 배열), 9chpter(파일 생성)
#include <iostream>
#include <fstream>
#include <string>

using namespace std;

struct Book {
	char title[3];//도서명
	char author[3];
};
void structPrn(Book book);
void structinput(Book* book);
static int num;

void display_menu() { //메뉴를 출력하는 함수
	cout << "<< 도서관리 프로그램 >>" << endl;
	cout << "1. 도서 목록 출력" << endl;
	cout << "2. 도서 추가" << endl;
	cout << "9. 종료" << endl;
	printf("메뉴입력 => ");
	cin >> num;

}
// 메뉴 입력에 1입력시 번호, 책제목, 저자 를 출력
// 메뉴 2 입력시 책 제목 입력 : 과 책 저자 입력 : 을 실행하여 book 리스트추가
// 메뉴 9입력시 프로그램 종료


static string out_line;
void read_file(Book* book) { //파일을 읽어 도서배열에 저장하는 함수
	//입력

	ofstream out("book_list.txt", std::ios_base::out | std::ios_base::app);
	for (int i = 0; i <= 5; i++) {
		cin >> out_line;
		out << out_line << endl;
	}
	out.close();

}
void print_books(Book* book) { //도서목록을 출력하는 함수
	std::ifstream file("book_list.txt"); // example.txt 파일을 연다. 없으면 생성. 
	if (file.is_open()) {

		printf("번호    책제목   저자\n");
		while (getline(file, out_line)) {
			cout << out_line << endl;
		}
		file.close(); // 열었떤 파일을 닫는다. 
	}
}
void add_book(Book* book) { //도서를 추가하는 함수
	std::ifstream file("book_list.txt", std::ios_base::out | std::ios_base::app);
	if (file.is_open()) {
		ofstream out("book_list.txt");
		for (int i = 0; i < 2; i++) {
			if (i == 0) {
				cout << "책 제목 입력 : ";
				cin >> out_line;
				out << out_line << endl;
			}
			else {
				cout << "책 저자 입력 : ";
				cin >> out_line;
				out << out_line << endl;
			}

		}
		file.close();
	}
}

void write_file(Book* book) { //도서 목록을 파일로 출력하는 함수
	//출력
	string in_line;
	ifstream in("book_list.txt");
	while (getline(in, in_line)) {
		cout << in_line << endl;
	}
	in.close();
}


int main() {
	while (1) {
		display_menu();
		read_file(0);

		if (num == 1) {
			print_books(0);
		}
		else if (num == 2) {
			add_book(0);
		}
		else if (num == 9) {
			//write_file(0);
			break;
		}
		/*else {
			write_file(0);
			break;
		}*/
		//write_file(0);
		break;
	}
}
//파일 입출력 및 각 기능은 별도의 함수로 작성
//문자배열을 매개변수로 받아 동적할당 &문자열 복사하여 반환하는 함수
//	: char* make_string(char*str)
